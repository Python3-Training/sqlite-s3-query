version: 2.1

jobs:
  download-test-reporter:
    docker:
      - image: cimg/base:2021.04
    steps:
      - attach_workspace:
          at: ~/workspace
      - run:
          name: Download test reporter
          command: |
            set -exu
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter
      - persist_to_workspace:
          root: ./
          paths:
            - cc-test-reporter
  test:
    parameters:
      sqlite3-url-version:
        type: string
      python-version:
        type: string
    docker:
      - image: cimg/python:<< parameters.python-version >>
      - image: minio/minio:RELEASE.2021-08-05T22-01-19Z
        environment:
          MINIO_ACCESS_KEY: AKIAIOSFODNN7EXAMPLE
          MINIO_SECRET_KEY: wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
          MINIO_REGION: us-east-1
        entrypoint: sh
        command: ['-c', 'mkdir -p /data1 && mkdir -p /data2 && mkdir -p /data3 && mkdir -p /data4 && minio server /data{1...4}']
    steps:
      - checkout
      - attach_workspace:
          at: ~/workspace
      - run:
          name: Install dependencies
          command: |
            pip install .
            pip install coverage
      - run:
          name: Set environment variables
          command: |
            set -exu
            echo 'export SQLITE3_URL_VERSION=<< parameters.sqlite3-url-version >>' >> $BASH_ENV
            echo 'export SQLITE3_URL=$(echo $SQLITE3_URL_VERSION | cut -f1 -d#)' >> $BASH_ENV
            echo 'export SQLITE3_VERSION=$(echo $SQLITE3_URL_VERSION | cut -f2 -d#)' >> $BASH_ENV
            echo 'export LD_LIBRARY_PATH=~/lib' >> $BASH_ENV
            source $BASH_ENV
      - unless:
          condition:
            equal: [default, << parameters.sqlite3-url-version >>]
          steps:
            - run:
                name: Install SQLite
                command: |
                  set -exu
                  wget -O sqlite3.tar.gz $SQLITE3_URL
                  mkdir sqlite3
                  tar -zxvf sqlite3.tar.gz --strip-components=1 -C sqlite3
                  mkdir ~/lib
                  (
                    cd sqlite3
                    ./configure
                    make sqlite3.c
                    gcc -shared -fPIC -o libsqlite3.so.0 sqlite3.c
                    mv libsqlite3.so.0 ~/lib
                  )
      - run:
          name: Run tests
          command: |
            set -exu
            ~/workspace/cc-test-reporter before-build
            coverage run -m unittest
            coverage xml
            ~/workspace/cc-test-reporter format-coverage --output coverage/$SQLITE3_VERSION-<< parameters.python-version >>.json
      - persist_to_workspace:
          root: ./
          paths:
            - coverage/*.json
  upload-coverage:
    docker:
      - image: cimg/base:2021.04
    steps:
      - attach_workspace:
          at: ~/workspace
      - run:
          name: Upload coverage
          command: |
            set -exu
            ~/workspace/cc-test-reporter sum-coverage ~/workspace/coverage/*.json -p 24
            ~/workspace/cc-test-reporter upload-coverage

workflows:
  test:
    jobs:
      - download-test-reporter
      - test:
          requires:
            - download-test-reporter  
          matrix:
            parameters:
              sqlite3-url-version:
                - "https://www.sqlite.org/src/tarball/5c9a6c06/SQLite-5c9a6c06.tar.gz#3036000"
                - "https://www.sqlite.org/src/tarball/cd0b37c5/SQLite-cd0b37c5.tar.gz#3007015"
                - "default"
              python-version:
                - "3.6.10"
                - "3.6.14"
                - "3.7.4"
                - "3.7.11"
                - "3.8.0"
                - "3.8.12"
                - "3.9.0"
                - "3.9.7"
      - upload-coverage:
          requires:
            - test
